# proto-file: xls/delay_model/delay_model.proto
# proto-message: xls.delay_model.DelayModel
op_models {
  op: "kIdentity"
  estimator {
    regression {
    }
  }
}
op_models {
  op: "kNot"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kAnd"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kNand"
  estimator {
    alias_op: "kAnd"
  }
}
op_models {
  op: "kOr"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kNor"
  estimator {
    alias_op: "kOr"
  }
}
op_models {
  op: "kXor"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kAndReduce"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kOrReduce"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kXorReduce"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kGate"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kEncode"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kAdd"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kSub"
  estimator {
    alias_op: "kAdd"
  }
}
op_models {
  op: "kNeg"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kSignExt"
  estimator {
    regression {
      expressions {
        bin_op: SUB
        lhs_expression {
          factor {
            source: RESULT_BIT_COUNT
          }
        }
        rhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kSel"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kUMul"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
  specializations {
    kind: OPERANDS_IDENTICAL
    estimator {
      regression {
        expressions {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kSMul"
  estimator {
    alias_op: "kUMul"
  }
}
op_models {
  op: "kUMulp"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
  specializations {
    kind: OPERANDS_IDENTICAL
    estimator {
      regression {
        expressions {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kSMulp"
  estimator {
    alias_op: "kUMulp"
  }
}
op_models {
  op: "kUDiv"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
      expressions {
        bin_op: MULTIPLY
        lhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
        rhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kUMod"
  estimator {
    alias_op: "kUDiv"
  }
}
op_models {
  op: "kSDiv"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
      expressions {
        bin_op: MULTIPLY
        lhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
        rhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kSMod"
  estimator {
    alias_op: "kSDiv"
  }
}
op_models {
  op: "kShll"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kShrl"
  estimator {
    alias_op: "kShll"
  }
}
op_models {
  op: "kShra"
  estimator {
    alias_op: "kShll"
  }
}
op_models {
  op: "kDynamicBitSlice"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
          operand_number: 1
        }
      }
    }
  }
}
op_models {
  op: "kBitSliceUpdate"
  estimator {
    alias_op: "kDynamicBitSlice"
  }
}
op_models {
  op: "kOneHot"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kSLe"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kSLt"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kSGe"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kSGt"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kULe"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kULt"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kUGe"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kUGt"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kEq"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kNe"
  estimator {
    alias_op: "kEq"
  }
}
op_models {
  op: "kDecode"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kArrayIndex"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
      expressions {
        bin_op: DIVIDE
        lhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
        rhs_expression {
          factor {
            source: RESULT_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kArrayUpdate"
  estimator {
    alias_op: "kSel"
  }
}
op_models {
  op: "kArraySlice"
  estimator {
    alias_op: "kArrayIndex"
  }
}
op_models {
  op: "kOneHotSel"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kPrioritySel"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kBitSlice"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kArray"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kArrayConcat"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kConcat"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kLiteral"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kParam"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kReverse"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kTuple"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kTupleIndex"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kZeroExt"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kAssert"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kAfterAll"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kMinDelay"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kCover"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kReceive"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kSend"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kTrace"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kInputPort"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kOutputPort"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kRegisterRead"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kRegisterWrite"
  estimator {
    fixed: 0
  }
}
data_points {
  operation {
    op: "kIdentity"
    bit_count: 1
    operands {
      bit_count: 1
    }
  }
  delay: 51
  delay_offset: 44
}
data_points {
  operation {
    op: "kNot"
    bit_count: 4
    operands {
      bit_count: 4
    }
  }
  delay: 44
  delay_offset: 44
}
data_points {
  operation {
    op: "kNot"
    bit_count: 16
    operands {
      bit_count: 16
    }
  }
  delay: 44
  delay_offset: 44
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 53
  delay_offset: 44
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 53
  delay_offset: 44
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 57
  delay_offset: 44
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 65
  delay_offset: 44
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 65
  delay_offset: 44
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 74
  delay_offset: 44
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 81
  delay_offset: 44
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 81
  delay_offset: 44
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 85
  delay_offset: 44
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 52
  delay_offset: 44
}
data_points {
  operation {
    op: "kOr"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 52
  delay_offset: 44
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 53
  delay_offset: 44
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 57
  delay_offset: 44
}
data_points {
  operation {
    op: "kOr"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 57
  delay_offset: 44
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 72
  delay_offset: 44
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 72
  delay_offset: 44
}
data_points {
  operation {
    op: "kOr"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 72
  delay_offset: 44
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 66
  delay_offset: 44
}
data_points {
  operation {
    op: "kXor"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 66
  delay_offset: 44
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 103
  delay_offset: 44
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 97
  delay_offset: 44
}
data_points {
  operation {
    op: "kXor"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 97
  delay_offset: 44
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 120
  delay_offset: 44
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 129
  delay_offset: 44
}
data_points {
  operation {
    op: "kXor"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 129
  delay_offset: 44
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 4
    }
  }
  delay: 65
  delay_offset: 44
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 8
    }
  }
  delay: 76
  delay_offset: 44
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 16
    }
  }
  delay: 88
  delay_offset: 44
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 32
    }
  }
  delay: 92
  delay_offset: 44
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 64
    }
  }
  delay: 104
  delay_offset: 44
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 128
    }
  }
  delay: 115
  delay_offset: 44
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 4
    }
  }
  delay: 57
  delay_offset: 44
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 8
    }
  }
  delay: 71
  delay_offset: 44
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 16
    }
  }
  delay: 80
  delay_offset: 44
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 32
    }
  }
  delay: 87
  delay_offset: 44
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 64
    }
  }
  delay: 97
  delay_offset: 44
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 128
    }
  }
  delay: 109
  delay_offset: 44
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 4
    }
  }
  delay: 97
  delay_offset: 44
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 8
    }
  }
  delay: 123
  delay_offset: 44
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 16
    }
  }
  delay: 151
  delay_offset: 44
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 32
    }
  }
  delay: 160
  delay_offset: 44
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 64
    }
  }
  delay: 191
  delay_offset: 44
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 128
    }
  }
  delay: 218
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 1
    operands {
      bit_count: 1
    }
  }
  delay: 51
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 4
    operands {
      bit_count: 1
    }
  }
  delay: 51
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 4
    operands {
      bit_count: 2
    }
  }
  delay: 51
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 8
    operands {
      bit_count: 4
    }
  }
  delay: 63
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 16
    operands {
      bit_count: 8
    }
  }
  delay: 63
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 16
    operands {
      bit_count: 12
    }
  }
  delay: 63
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 32
    operands {
      bit_count: 16
    }
  }
  delay: 63
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 32
    operands {
      bit_count: 24
    }
  }
  delay: 63
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 64
    operands {
      bit_count: 32
    }
  }
  delay: 63
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 64
    operands {
      bit_count: 48
    }
  }
  delay: 63
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 128
    operands {
      bit_count: 64
    }
  }
  delay: 63
  delay_offset: 44
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 128
    operands {
      bit_count: 96
    }
  }
  delay: 63
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 256
    operands {
      bit_count: 256
    }
    operands {
      bit_count: 8
    }
  }
  delay: 1770
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 128
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 7
    }
  }
  delay: 883
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 64
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 6
    }
  }
  delay: 546
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 340
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 24
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 5
    }
  }
  delay: 292
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 4
    }
  }
  delay: 226
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 4
    }
  }
  delay: 185
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 3
    }
  }
  delay: 157
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 6
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 3
    }
  }
  delay: 141
  delay_offset: 44
}
data_points {
  operation {
    op: "kShll"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 2
    }
  }
  delay: 109
  delay_offset: 44
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 4
    }
  }
  delay: 214
  delay_offset: 44
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 295
  delay_offset: 44
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 6
    }
  }
  delay: 480
  delay_offset: 44
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 7
    }
  }
  delay: 767
  delay_offset: 44
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 256
    }
    operands {
      bit_count: 8
    }
  }
  delay: 1572
  delay_offset: 44
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 16
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 324
  delay_offset: 44
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 16
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 6
    }
  }
  delay: 533
  delay_offset: 44
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 16
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 7
    }
  }
  delay: 910
  delay_offset: 44
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 16
    operands {
      bit_count: 256
    }
    operands {
      bit_count: 8
    }
  }
  delay: 1569
  delay_offset: 44
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 8
    operands {
      bit_count: 8
      element_count: 256
    }
    operands {
      bit_count: 8
    }
  }
  delay: 305
  delay_offset: 44
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 32
    operands {
      bit_count: 32
      element_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 318
  delay_offset: 44
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 16
    operands {
      bit_count: 16
      element_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 294
  delay_offset: 44
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 16
    operands {
      bit_count: 16
      element_count: 16
    }
    operands {
      bit_count: 4
    }
  }
  delay: 521
  delay_offset: 44
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 128
    operands {
      bit_count: 128
      element_count: 16
    }
    operands {
      bit_count: 4
    }
  }
  delay: 2213
  delay_offset: 44
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 8
    operands {
      bit_count: 8
      element_count: 1024
    }
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 2
    }
  }
  delay: 396
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 1024
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 1024
    }
    operands {
      bit_count: 1024
    }
  }
  delay: 7969
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 512
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 512
    }
    operands {
      bit_count: 512
    }
  }
  delay: 4024
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 128
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
  }
  delay: 1063
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 64
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 568
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 32
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 320
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 16
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 197
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 8
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 137
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 1024
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 1024
    }
    operands {
      bit_count: 1024
    }
    operands {
      bit_count: 1024
    }
    operands {
      bit_count: 1024
    }
  }
  delay: 4238
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 512
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 512
    }
    operands {
      bit_count: 512
    }
    operands {
      bit_count: 512
    }
    operands {
      bit_count: 512
    }
  }
  delay: 2256
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 128
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
  }
  delay: 694
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 64
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 506
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 32
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 265
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 16
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 212
  delay_offset: 44
}
data_points {
  operation {
    op: "kSel"
    bit_count: 8
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 167
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 128
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
  }
  delay: 345
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 128
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
  }
  delay: 354
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 128
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
  }
  delay: 594
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 64
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 212
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 64
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 221
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 64
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 342
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 32
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 154
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 32
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 215
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 16
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 95
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 16
    operands {
      bit_count: 5
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 117
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 128
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
  }
  delay: 842
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 128
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
  }
  delay: 449
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 128
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
  }
  delay: 474
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 64
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 476
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 64
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 291
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 64
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 360
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 32
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 238
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 32
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 404
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 16
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 183
  delay_offset: 44
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 16
    operands {
      bit_count: 5
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 199
  delay_offset: 44
}
data_points {
  operation {
    op: "kGate"
    bit_count: 256
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 256
    }
  }
  delay: 404
  delay_offset: 44
}
data_points {
  operation {
    op: "kGate"
    bit_count: 128
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 128
    }
  }
  delay: 240
  delay_offset: 44
}
data_points {
  operation {
    op: "kGate"
    bit_count: 64
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 64
    }
  }
  delay: 154
  delay_offset: 44
}
data_points {
  operation {
    op: "kGate"
    bit_count: 40
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 40
    }
  }
  delay: 121
  delay_offset: 44
}
data_points {
  operation {
    op: "kGate"
    bit_count: 24
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 24
    }
  }
  delay: 96
  delay_offset: 44
}
data_points {
  operation {
    op: "kGate"
    bit_count: 8
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 8
    }
  }
  delay: 68
  delay_offset: 44
}
data_points {
  operation {
    op: "kGate"
    bit_count: 4
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 4
    }
  }
  delay: 61
  delay_offset: 44
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 512
    operands {
      bit_count: 9
    }
  }
  delay: 642
  delay_offset: 44
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 256
    operands {
      bit_count: 8
    }
  }
  delay: 385
  delay_offset: 44
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 128
    operands {
      bit_count: 7
    }
  }
  delay: 252
  delay_offset: 44
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 64
    operands {
      bit_count: 6
    }
  }
  delay: 190
  delay_offset: 44
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 32
    operands {
      bit_count: 5
    }
  }
  delay: 164
  delay_offset: 44
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 16
    operands {
      bit_count: 4
    }
  }
  delay: 106
  delay_offset: 44
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 8
    operands {
      bit_count: 3
    }
  }
  delay: 82
  delay_offset: 44
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 9
    operands {
      bit_count: 512
    }
  }
  delay: 142
  delay_offset: 44
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 8
    operands {
      bit_count: 256
    }
  }
  delay: 128
  delay_offset: 44
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 7
    operands {
      bit_count: 128
    }
  }
  delay: 112
  delay_offset: 44
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 6
    operands {
      bit_count: 64
    }
  }
  delay: 109
  delay_offset: 44
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 5
    operands {
      bit_count: 32
    }
  }
  delay: 94
  delay_offset: 44
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 4
    operands {
      bit_count: 16
    }
  }
  delay: 81
  delay_offset: 44
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 3
    operands {
      bit_count: 8
    }
  }
  delay: 64
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 1025
    operands {
      bit_count: 1024
    }
  }
  delay: 297
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 513
    operands {
      bit_count: 512
    }
  }
  delay: 267
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 257
    operands {
      bit_count: 256
    }
  }
  delay: 207
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 129
    operands {
      bit_count: 128
    }
  }
  delay: 183
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 65
    operands {
      bit_count: 64
    }
  }
  delay: 164
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 48
    operands {
      bit_count: 47
    }
  }
  delay: 150
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 33
    operands {
      bit_count: 32
    }
  }
  delay: 146
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 25
    operands {
      bit_count: 24
    }
  }
  delay: 131
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 16
    operands {
      bit_count: 15
    }
  }
  delay: 118
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 9
    operands {
      bit_count: 8
    }
  }
  delay: 89
  delay_offset: 44
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 6
    operands {
      bit_count: 5
    }
  }
  delay: 84
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 256
    operands {
      bit_count: 256
    }
    operands {
      bit_count: 256
    }
  }
  delay: 364
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 128
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 128
    }
  }
  delay: 333
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 64
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 281
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 40
    operands {
      bit_count: 40
    }
    operands {
      bit_count: 40
    }
  }
  delay: 246
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 233
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 24
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
  }
  delay: 214
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 20
    operands {
      bit_count: 20
    }
    operands {
      bit_count: 20
    }
  }
  delay: 197
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 188
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 181
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 10
    operands {
      bit_count: 10
    }
    operands {
      bit_count: 10
    }
  }
  delay: 150
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 145
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 6
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 6
    }
  }
  delay: 137
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 5
    operands {
      bit_count: 5
    }
    operands {
      bit_count: 5
    }
  }
  delay: 122
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 112
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 3
    operands {
      bit_count: 3
    }
    operands {
      bit_count: 3
    }
  }
  delay: 103
  delay_offset: 44
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 2
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 2
    }
  }
  delay: 93
  delay_offset: 44
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 256
    operands {
      bit_count: 256
    }
  }
  delay: 300
  delay_offset: 44
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 128
    operands {
      bit_count: 128
    }
  }
  delay: 256
  delay_offset: 44
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 64
    operands {
      bit_count: 64
    }
  }
  delay: 207
  delay_offset: 44
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 40
    operands {
      bit_count: 40
    }
  }
  delay: 177
  delay_offset: 44
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 32
    operands {
      bit_count: 32
    }
  }
  delay: 169
  delay_offset: 44
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 24
    operands {
      bit_count: 24
    }
  }
  delay: 168
  delay_offset: 44
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 8
    operands {
      bit_count: 8
    }
  }
  delay: 114
  delay_offset: 44
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 4
    operands {
      bit_count: 4
    }
  }
  delay: 90
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 96
    operands {
      bit_count: 96
    }
    operands {
      bit_count: 96
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 1408
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 64
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 1091
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 47
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 1045
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 759
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 24
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 671
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 503
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 285
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 159
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 6
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 6
    }
  }
  delay: 247
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 316
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 16
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 395
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 409
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 508
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 32
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 602
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 24
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
  }
  delay: 643
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 783
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 64
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 875
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 47
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
  }
  delay: 970
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 64
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 1156
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 192
    operands {
      bit_count: 96
    }
    operands {
      bit_count: 96
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 1552
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 128
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 1186
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 96
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 1048
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 64
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 870
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 48
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 740
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 32
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 617
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 291
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 128
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 1256
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 94
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
  }
  delay: 1067
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 64
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 889
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 48
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
  }
  delay: 760
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 32
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 619
  delay_offset: 44
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 16
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 431
  delay_offset: 44
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 83
  delay_offset: 44
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 6
    }
  }
  delay: 107
  delay_offset: 44
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 121
  delay_offset: 44
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 137
  delay_offset: 44
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 134
  delay_offset: 44
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 163
  delay_offset: 44
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 40
    }
    operands {
      bit_count: 40
    }
  }
  delay: 162
  delay_offset: 44
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
  }
  delay: 207
  delay_offset: 44
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 198
  delay_offset: 44
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 84
  delay_offset: 44
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 6
    }
  }
  delay: 101
  delay_offset: 44
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 88
  delay_offset: 44
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 109
  delay_offset: 44
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 100
  delay_offset: 44
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 112
  delay_offset: 44
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 40
    }
    operands {
      bit_count: 40
    }
  }
  delay: 127
  delay_offset: 44
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
  }
  delay: 116
  delay_offset: 44
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 122
  delay_offset: 44
}
data_points {
  operation {
    op: "kUDiv"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 832
  delay_offset: 44
}
data_points {
  operation {
    op: "kUDiv"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 1520
  delay_offset: 44
}
data_points {
  operation {
    op: "kUDiv"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 2315
  delay_offset: 44
}
data_points {
  operation {
    op: "kUDiv"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 6016
  delay_offset: 44
}
data_points {
  operation {
    op: "kSDiv"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 968
  delay_offset: 44
}
data_points {
  operation {
    op: "kSDiv"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 1724
  delay_offset: 44
}
data_points {
  operation {
    op: "kSDiv"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 2512
  delay_offset: 44
}
data_points {
  operation {
    op: "kSDiv"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 6460
  delay_offset: 44
}
